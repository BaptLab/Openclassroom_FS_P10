name: CI/CD
run-name: ${{ github.actor }} is working on GitHub Actions !
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_EMAIL }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Back-end
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:latest

      - name: Build and Push Front-end
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:latest

  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Build and Push Back-end
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:latest

      - name: Build and Push Front-end
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:latest

      - name: Run Tests in Back-end Container
        run: |
          docker run -d --name back-container ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:latest
          docker exec back-container mvn -B clean test
          docker stop back-container
          docker rm back-container

      - name: Run Tests in Front-end Container
        run: |
          docker run -d --name front-container ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:latest
          docker exec front-container npm install
          docker exec front-container npm run test:prod
          docker stop front-container
          docker rm front-container

  sonarQubeSetup:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create SonarQube Volumes
        run: |
          docker volume create --name sonarqube_data
          docker volume create --name sonarqube_logs
          docker volume create --name sonarqube_extensions

  sonarQubeAnalysisBackend:
    runs-on: ubuntu-latest
    needs: [build-and-test, sonarQubeSetup]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Start SonarQube Container
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            -v sonarqube_data:/opt/sonarqube/data \
            -v sonarqube_logs:/opt/sonarqube/logs \
            -v sonarqube_extensions:/opt/sonarqube/extensions \
            sonarqube:latest

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOSR_URL }}
        working-directory: ./back
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Stop SonarQube Container
        run: docker stop sonarqube

  sonarQubeAnalysisFrontend:
    runs-on: ubuntu-latest
    needs: [build-and-test, sonarQubeSetup]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js ${{matrix.node-version}}
        uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}

      - name: Install Front-end Dependencies
        working-directory: ./front
        run: npm install

      - name: Run Front-end Tests
        working-directory: ./front
        run: npm run test:prod

      - name: Start SonarQube Container
        run: |
          docker run -d --name sonarqube \
            -p 9000:9000 \
            -v sonarqube_data:/opt/sonarqube/data \
            -v sonarqube_logs:/opt/sonarqube/logs \
            -v sonarqube_extensions:/opt/sonarqube/extensions \
            sonarqube:latest

      - name: SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONT }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOSR_URL }}
        working-directory: ./front
        run: npm run sonar-scanner

      - name: Stop SonarQube Container
        run: docker stop sonarqube
