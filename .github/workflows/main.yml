name: CI/CD
run-name: ${{ github.actor }} is working on GitHub Actions!
on: [push]

jobs:

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:community
        ports:
          - 9000:9000
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache SonarScanner
        uses: actions/cache@v2
        with:
          path: ~/.sonar/sonarscanner
          key: ${{ runner.os }}-sonarscanner
          restore-keys: ${{ runner.os }}-sonarscanner

      - name: Download and Install SonarScanner
        run: |
          mkdir -p ~/.sonar
          curl -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip -o sonarscanner.zip
          unzip sonarscanner.zip -d ~/.sonar/sonarscanner
          
      - name: Analyze back directory with SonarScanner
        run: ~/.sonar/sonarscanner/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
          -Dsonar.host.url=http://sonarqube:9000 \
          -Dsonar.sources=./back

      - name: Analyze front directory with SonarScanner
        run: ~/.sonar/sonarscanner/sonar-scanner-4.6.2.2472-linux/bin/sonar-scanner \
          -Dsonar.host.url=http://sonarqube:9000 \
          -Dsonar.sources=./front

  frontendTests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install Front-end Dependencies
        run: npm install
        working-directory: ./front

      - name: Run Front-end Tests
        run: npm run test:prod
        working-directory: ./front

      - name: Upload Karma Report
        uses: actions/upload-artifact@v3
        with:
          name: karma-report
          path: ./front/coverage

  backendTests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Build with Maven
        run: mvn -B package --file ./pom.xml
        working-directory: ./back

      - name: Test with Maven
        run: mvn -B clean test
        working-directory: ./back

      - name: Upload Jacoco Report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: ./back/target/site/jacoco

  build:
    runs-on: ubuntu-latest
    needs: [sonarqube, backendTests, frontendTests]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_EMAIL }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Back-end
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-back:latest

      - name: Build and Push Front-end
        uses: docker/build-push-action@v5
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bobapp-front:latest
